{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/local-storage.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"p {\\r\\n    font-family: Lato;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxrQkFBa0I7R0FDbkIiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInAge1xyXG4gICAgZm9udC1mYW1pbHk6IExhdG87XHJcbiAgfSJdfQ== */\"","module.exports = \"<button (click)=\\\"buttonClicked()\\\">Increase counter</button> {{counter | json}} \\n<br>\\n\\n\"","import { Component } from '@angular/core';\nimport { StorageService } from './local-storage.service';\n\n@Component({\n  selector: 'my-app',\n  templateUrl: './app.component.html',\n  styleUrls: [ './app.component.css' ]\n})\nexport class AppComponent  {\n  \n  public counter = { value: 0};\n  public storeKey = \"counter\";\n  \n  constructor(\n    private storageService: StorageService\n  ) {\n    let value = Number(this.storageService.getItemFromStore(this.storeKey));\n    if (value)\n      this.counter.value = value;\n    \n    this.storageService.changes.subscribe(item => {\n      \n      if (item.key == this.storeKey)\n      {\n        debugger;\n        this.counter = JSON.parse(JSON.stringify({value: item.value}));\n      }\n    });\n  }\n\n  \n  buttonClicked() {\n    this.counter.value++; \n    this.storageService.store(this.storeKey, this.counter.value);\n  }\n  \n}\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { StorageService } from './local-storage.service';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [StorageService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable, OnDestroy } from '@angular/core';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport 'rxjs/add/operator/share'\r\n\r\n\r\n@Injectable()\r\nexport class StorageService implements OnDestroy {\r\n  private onSubject = new Subject<{ key: string, value: any }>();\r\n  public changes = this.onSubject.asObservable().share();\r\n\r\n  constructor() {\r\n    this.start();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.stop();\r\n  }\r\n\r\n  public getStorage() {\r\n    let s = [];\r\n    for (let i = 0; i < localStorage.length; i++) {\r\n      s.push({\r\n        key: localStorage.key(i),\r\n        value: JSON.parse(localStorage.getItem(localStorage.key(i)))\r\n      });\r\n    }\r\n    return s;\r\n  }\r\n\r\n  public getItemFromStore(value): any{\r\n    return localStorage.getItem(value);\r\n  }\r\n\r\n  public store(key: string, data: any): void {\r\n    localStorage.setItem(key, data);\r\n    // the local application doesn't seem to catch changes to localStorage...\r\n    this.onSubject.next({ key: key, value: data})\r\n  }\r\n\r\n  public clear(key) {\r\n    localStorage.removeItem(key);\r\n    // the local application doesn't seem to catch changes to localStorage...\r\n    this.onSubject.next({ key: key, value: null });\r\n  }\r\n\r\n\r\n  private start(): void {\r\n    window.addEventListener(\"storage\", this.storageEventListener.bind(this));\r\n  }\r\n\r\n  private storageEventListener(event: StorageEvent) {\r\n    if (event.storageArea == localStorage) {\r\n      let v;\r\n      try { v = JSON.parse(event.newValue); }\r\n      catch (e) { v = event.newValue; }\r\n      this.onSubject.next({ key: event.key, value: v });\r\n    }\r\n  }\r\n\r\n  private stop(): void {\r\n    window.removeEventListener(\"storage\", this.storageEventListener.bind(this));\r\n    this.onSubject.complete();\r\n  }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}